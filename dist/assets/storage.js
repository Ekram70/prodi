const a={timeLimits:[],bedtime:{enabled:!1,startTime:"23:00",endTime:"06:00"},usageStats:{}},n={async getSettings(){return(await chrome.storage.sync.get("settings")).settings||a},async saveSettings(t){await chrome.storage.sync.set({settings:t})},async getTimeLimits(){return(await this.getSettings()).timeLimits},async saveTimeLimit(t){const s=await this.getSettings(),e=s.timeLimits.findIndex(i=>i.domain===t.domain);e>=0?s.timeLimits[e]=t:s.timeLimits.push(t),await this.saveSettings(s)},async getBedtimeSettings(){return(await this.getSettings()).bedtime},async saveBedtimeSettings(t){const s=await this.getSettings();s.bedtime=t,await this.saveSettings(s)},async getUsageStats(){return(await this.getSettings()).usageStats},async updateUsageStats(t,s){const e=await this.getSettings();e.usageStats[t]||(e.usageStats[t]={domain:t,timeSpentToday:0,timeSpentThisMonth:0}),e.usageStats[t].timeSpentToday+=s,e.usageStats[t].timeSpentThisMonth+=s,await this.saveSettings(e)},async resetDailyStats(){const t=await this.getSettings();Object.values(t.usageStats).forEach(s=>{s.timeSpentToday=0}),await this.saveSettings(t)},async resetMonthlyStats(){const t=await this.getSettings();Object.values(t.usageStats).forEach(s=>{s.timeSpentThisMonth=0}),await this.saveSettings(t)}};export{n as s};
