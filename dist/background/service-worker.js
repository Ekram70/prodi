import{s as r}from"../assets/storage.js";let s=new Map,d=Date.now();chrome.runtime.onInstalled.addListener(()=>{chrome.alarms.create("dailyReset",{periodInMinutes:24*60,when:l()}),chrome.alarms.create("monthlyReset",{periodInMinutes:30*24*60,when:h()})});chrome.alarms.onAlarm.addListener(async e=>{e.name==="dailyReset"?await r.resetDailyStats():e.name==="monthlyReset"&&await r.resetMonthlyStats()});chrome.tabs.onUpdated.addListener((e,t,n)=>{if(t.status==="complete"&&n.url){const a=new URL(n.url).hostname;s.set(e,{id:e,url:n.url,domain:a,active:n.active,lastActive:Date.now()})}});chrome.tabs.onActivated.addListener(({tabId:e})=>{const t=s.get(e);t&&(t.active=!0,t.lastActive=Date.now())});chrome.tabs.onRemoved.addListener(e=>{s.delete(e)});setInterval(async()=>{const e=Date.now(),t=(e-d)/1e3/60;d=e;const n=await r.getSettings(),a=n.timeLimits;for(const[m,o]of s.entries())if(o.active){const c=a.find(i=>i.domain===o.domain);if(c){await r.updateUsageStats(o.domain,t);const i=n.usageStats[o.domain];i&&(i.timeSpentToday>=c.minutesPerDay||i.timeSpentThisMonth>=c.minutesPerMonth)&&chrome.tabs.update(m,{url:"chrome-extension://"+chrome.runtime.id+"/pages/blocked.html"})}}},6e4);function l(){const e=new Date,t=new Date(e);return t.setHours(24,0,0,0),t.getTime()}function h(){const e=new Date;return new Date(e.getFullYear(),e.getMonth()+1,1).getTime()}chrome.runtime.onMessage.addListener((e,t,n)=>{var a;if(e.type==="GET_ACTIVE_TAB_INFO"){const m=s.get(((a=t.tab)==null?void 0:a.id)||0);n(m)}return!0});
